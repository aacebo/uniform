import { ElementRef, ChangeDetectorRef, OnInit } from '@angular/core';
import { NgForm, FormGroupDirective, ControlValueAccessor } from '@angular/forms';
import { UniSubscriptionHelper } from '../core/helpers';
import { UniFormFieldComponent } from './components/form-field/form-field.component';
import * as i0 from "@angular/core";
export declare class UniFormFieldControlBase<T> extends UniSubscriptionHelper implements ControlValueAccessor, OnInit {
    readonly el: ElementRef<HTMLElement>;
    readonly cdr: ChangeDetectorRef;
    readonly uniFormField: UniFormFieldComponent;
    readonly ngForm: NgForm;
    readonly ngFormGroup: FormGroupDirective;
    get id(): string;
    set id(v: string);
    protected _id: string;
    get tabIndex(): number;
    set tabIndex(v: number);
    private _tabIndex;
    get placeholder(): string;
    set placeholder(v: string);
    private _placeholder?;
    get required(): boolean;
    set required(v: boolean);
    private _required;
    get disabled(): boolean;
    set disabled(v: boolean);
    private _disabled;
    get autofocus(): boolean;
    set autofocus(v: boolean);
    private _autofocus;
    get autocomplete(): boolean;
    set autocomplete(v: boolean);
    private _autocomplete;
    get value(): T;
    set value(v: T);
    private _value?;
    onChange: (v: any) => void;
    onTouch: () => void;
    constructor(el: ElementRef<HTMLElement>, cdr: ChangeDetectorRef, uniFormField: UniFormFieldComponent, ngForm: NgForm, ngFormGroup: FormGroupDirective);
    ngOnInit(): void;
    writeValue(v: T): void;
    registerOnChange(fn: (v: any) => void): void;
    registerOnTouched(fn: () => {}): void;
    setDisabledState(disabled: boolean): void;
    static ɵfac: i0.ɵɵFactoryDef<UniFormFieldControlBase<any>>;
    static ɵdir: i0.ɵɵDirectiveDefWithMeta<UniFormFieldControlBase<any>, never, never, { "id": "id"; "tabIndex": "tabIndex"; "placeholder": "placeholder"; "required": "required"; "disabled": "disabled"; "autofocus": "autofocus"; "autocomplete": "autocomplete"; }, {}, never>;
}
