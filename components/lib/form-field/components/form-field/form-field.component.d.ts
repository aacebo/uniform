import { ChangeDetectorRef, EventEmitter } from '@angular/core';
import { UniColor } from '../../../core/enums';
import { UniLabelComponent } from '../label/label.component';
import { UniErrorComponent } from '../error/error.component';
import * as i0 from "@angular/core";
export declare class UniFormFieldComponent {
    readonly cdr: ChangeDetectorRef;
    color: UniColor;
    get label(): UniLabelComponent;
    set label(v: UniLabelComponent);
    private _label?;
    get error(): UniErrorComponent;
    set error(v: UniErrorComponent);
    private _error?;
    get id(): string;
    set id(v: string);
    private _id?;
    get focused(): boolean;
    set focused(v: boolean);
    private _focused?;
    get hasValue(): boolean;
    set hasValue(v: boolean);
    private _hasValue?;
    get disabled(): boolean;
    set disabled(v: boolean);
    private _disabled?;
    readonly clicked: EventEmitter<Event>;
    constructor(cdr: ChangeDetectorRef);
    static ɵfac: i0.ɵɵFactoryDef<UniFormFieldComponent>;
    static ɵcmp: i0.ɵɵComponentDefWithMeta<UniFormFieldComponent, "uni-form-field", ["uniFormField"], { "color": "color"; }, {}, ["label", "error"]>;
}
